open Orga;

let orga =
  Org.parseOrga(
    {js|
#+TITLE: Org Mode Testing
#+STARTUP: org-startup-folded: showall

* Test

** CSS

#+NAME: foo
#+BEGIN_SRC css
.foo {
color: blue;
}
#+END_SRC

** HTML

#+NAME: bar
#+BEGIN_SRC html :var css=foo :exports results :results value html
<html>
  <style type="text/css" media="screen">
$css
  </style>
<body>
  <p class="foo">
    hello
  </p>
</body>
</html>
#+END_SRC

#+BEGIN_SRC elisp :var all=bar
$bar
#+END_SRC

* Literate Calc Mode

This is a literate calc file.

Lines without "=" are ignored.

All results starting with "=>" are an overlay generated by
literate-calc-mode. That means they are displayed in Emacs, but not
actually in the buffer/file contents.

We can calculate a value like so:

= 2 + 2 => 4

If there is any string on the left hand side, it becomes a bound
variable.

Pi = 3.14159 => Pi: 3.14159

We can use this variable below the definiton.

Tau = Pi * 2 => Tau: 6.28318

Results are calculated using Emacs' own calc, so you can use formulas
as well.

= round(Pi, 2) => 3.14

Later bindings shadow earlier ones:

Pi = 3 => Pi: 3

= Pi => 3

Variable names can have spaces as well:

Monthly Expenses = 500 => Monthly Expenses: 500

Monthly Income = 1000 => Monthly Income: 1000

Annual Savings = 12 * (Monthly Income - Monthly Expenses) => Annual Savings: 6000

All values are recalculated on every update in a spreadsheet-like
fashion.

* Literate Programming

Mostly from [[http://www.howardism.org/Technical/Emacs/literate-programming-tutorial.html][Introduction to Literate Programming]]

** Execute any language commands

#+BEGIN_SRC elisp
(directory-files "/bin/")
#+END_SRC

#+RESULTS:
| . | .. | [ | bash | cat | chmod | cp | csh | date | dd | df | domainname | echo | ed | expr | hostname | kill | ksh | launchctl | link | ln | ls | mkdir | mv | pax | ps | pwd | rm | rmdir | sh | sleep | stty | sync | tcsh | test | unlink | wait4path | zsh |

#+BEGIN_SRC ruby
Dir.entries('/bin')
#+END_SRC

#+RESULTS:
| . | .. | cat | echo | launchctl | df | pwd | test | csh | wait4path | unlink | sleep | stty | date | ed | expr | pax | bash | kill | sh | domainname | ps | link | tcsh | dd | mkdir | ksh | hostname | rmdir | mv | ln | ls | cp | sync | zsh | chmod | rm | [ |


#+HEADER: :dir /bin
#+BEGIN_SRC sh
ls -la
#+END_SRC

#+RESULTS:
| total       | 5376 |      |       |         |     |    |       |            |
| drwxr-xr-x@ |   38 | root | wheel |    1216 | Mar | 28 |  2018 | 0          |
| drwxr-xr-x  |   30 | root | wheel |     960 | Oct | 26 | 23:18 | ..         |
| -rwxr-xr-x  |    1 | root | wheel |   22720 | Mar | 28 |  2018 | [          |
| -r-xr-xr-x  |    1 | root | wheel |  618448 | Mar | 28 |  2018 | bash       |
| -rwxr-xr-x  |    1 | root | wheel |   23648 | Mar | 28 |  2018 | cat        |
| -rwxr-xr-x  |    1 | root | wheel |   30016 | Mar | 28 |  2018 | chmod      |
| -rwxr-xr-x  |    1 | root | wheel |   29008 | Mar | 28 |  2018 | cp         |
| -rwxr-xr-x  |    1 | root | wheel |  380016 | Mar | 28 |  2018 | csh        |
| -rwxr-xr-x  |    1 | root | wheel |   28608 | Mar | 28 |  2018 | date       |
| -rwxr-xr-x  |    1 | root | wheel |   31984 | Mar | 28 |  2018 | dd         |
| -rwxr-xr-x  |    1 | root | wheel |   23392 | Mar | 28 |  2018 | df         |
| -r-xr-xr-x  |    1 | root | wheel |   18240 | Mar | 28 |  2018 | domainname |
| -rwxr-xr-x  |    1 | root | wheel |   18128 | Mar | 28 |  2018 | echo       |
| -rwxr-xr-x  |    1 | root | wheel |   54080 | Mar | 28 |  2018 | ed         |
| -rwxr-xr-x  |    1 | root | wheel |   23104 | Mar | 28 |  2018 | expr       |
| -rwxr-xr-x  |    1 | root | wheel |   18272 | Mar | 28 |  2018 | hostname   |
| -rwxr-xr-x  |    1 | root | wheel |   18672 | Mar | 28 |  2018 | kill       |
| -r-xr-xr-x  |    1 | root | wheel | 1287040 | Mar | 28 |  2018 | ksh        |
| -rwxr-xr-x  |    1 | root | wheel |  124656 | Mar | 28 |  2018 | launchctl  |
| -rwxr-xr-x  |    1 | root | wheel |   19024 | Mar | 28 |  2018 | link       |
| -rwxr-xr-x  |    1 | root | wheel |   19024 | Mar | 28 |  2018 | ln         |
| -rwxr-xr-x  |    1 | root | wheel |   38688 | Mar | 28 |  2018 | ls         |
| -rwxr-xr-x  |    1 | root | wheel |   18592 | Mar | 28 |  2018 | mkdir      |
| -rwxr-xr-x  |    1 | root | wheel |   24240 | Mar | 28 |  2018 | mv         |
| -rwxr-xr-x  |    1 | root | wheel |  111264 | Mar | 28 |  2018 | pax        |
| -rwsr-xr-x  |    1 | root | wheel |   51280 | Mar | 28 |  2018 | ps         |
| -rwxr-xr-x  |    1 | root | wheel |   18256 | Mar | 28 |  2018 | pwd        |
| -rwxr-xr-x  |    1 | root | wheel |   23952 | Mar | 28 |  2018 | rm         |
| -rwxr-xr-x  |    1 | root | wheel |   18160 | Mar | 28 |  2018 | rmdir      |
| -r-xr-xr-x  |    1 | root | wheel |  618512 | Mar | 28 |  2018 | sh         |
| -rwxr-xr-x  |    1 | root | wheel |   18080 | Mar | 28 |  2018 | sleep      |
| -rwxr-xr-x  |    1 | root | wheel |   32208 | Mar | 28 |  2018 | stty       |
| -rwxr-xr-x  |    1 | root | wheel |   42400 | Mar | 28 |  2018 | sync       |
| -rwxr-xr-x  |    1 | root | wheel |  380016 | Mar | 28 |  2018 | tcsh       |
| -rwxr-xr-x  |    1 | root | wheel |   22720 | Mar | 28 |  2018 | test       |
| -rwxr-xr-x  |    1 | root | wheel |   23952 | Mar | 28 |  2018 | unlink     |
| -rwxr-xr-x  |    1 | root | wheel |   42704 | Mar | 28 |  2018 | wait4path  |
| -rwxr-xr-x  |    1 | root | wheel |  610288 | Mar | 28 |  2018 | zsh        |

#+HEADER: :var TEMP="WORLD"
#+BEGIN_SRC sh
echo "HELLO $TEMP"
#+END_SRC

#+RESULTS:
: HELLO WORLD

** Section headers arguments in properties drawer
:PROPERTIES:
:header-args: :dir /bin
:header-args:ruby: :dir ~/Pictures
:END:

#+BEGIN_SRC sh
ls
#+END_SRC

#+RESULTS:
| [          |
| bash       |
| cat        |
| chmod      |
| cp         |
| csh        |
| date       |
| dd         |
| df         |
| domainname |
| echo       |
| ed         |
| expr       |
| hostname   |
| kill       |
| ksh        |
| launchctl  |
| link       |
| ln         |
| ls         |
| mkdir      |
| mv         |
| pax        |
| ps         |
| pwd        |
| rm         |
| rmdir      |
| sh         |
| sleep      |
| stty       |
| sync       |
| tcsh       |
| test       |
| unlink     |
| wait4path  |
| zsh        |

#+BEGIN_SRC ruby
  File.absolute_path(".")
#+END_SRC

#+RESULTS:
: /Users/flo_air/Pictures
** Final script output vs redirecting logs

#+BEGIN_SRC ruby
    puts 'Hello World'
    5 * 6
#+END_SRC

#+RESULTS:
: 30

You can redirect the logs with ~:results output~

#+BEGIN_SRC ruby :results output
    puts 'Hello World'
    5 * 6
#+END_SRC

#+RESULTS:
: Hello World

** Output formatting as a list

#+BEGIN_SRC ruby :results list
  Dir.entries('/bin').sort.select do |file|
     file[0] != '.'
  end
#+END_SRC

#+RESULTS:
- [
- bash
- cat
- chmod
- cp
- csh
- date
- dd
- df
- domainname
- echo
- ed
- expr
- hostname
- kill
- ksh
- launchctl
- link
- ln
- ls
- mkdir
- mv
- pax
- ps
- pwd
- rm
- rmdir
- sh
- sleep
- stty
- sync
- tcsh
- test
- unlink
- wait4path
- zsh
** Header variables

#+HEADER: :var a=42 d=56 :var f=23
#+HEADERS: :var b=79 e=12
#+BEGIN_SRC ruby :var c=3 g=2
  [ a, b, c, d, e, f, g ].sort { |a, b| b <=> a }
#+END_SRC

#+RESULTS:
| 79 | 56 | 42 | 23 | 12 | 3 | 2 |
** Block-to-block scope

#+NAME: twelve-primes
#+BEGIN_SRC ruby
require 'prime'
Prime.first 20
#+END_SRC

#+RESULTS: twelve-primes
| 2 | 3 | 5 | 7 | 11 | 13 | 17 | 19 | 23 | 29 | 31 | 37 | 41 | 43 | 47 | 53 | 59 | 61 | 67 | 71 |

#+BEGIN_SRC python :var primes=twelve-primes
return primes[-1]
#+END_SRC

#+RESULTS:
: 71

** Tabular Variable Data

#+NAME: cool-numbers
#+BEGIN_SRC emacs-lisp
  (mapcar (lambda (i)
            (list i          (random 10)
                  (expt i 2) (random 100)
                  (expt i 3) (random 1000)))
          (number-sequence 1 10))
#+END_SRC

#+RESULTS: cool-numbers
|  1 | 5 |   1 | 33 |    1 | 288 |
|  2 | 1 |   4 | 47 |    8 | 869 |
|  3 | 5 |   9 |  9 |   27 | 319 |
|  4 | 2 |  16 | 43 |   64 | 448 |
|  5 | 7 |  25 | 71 |  125 | 811 |
|  6 | 5 |  36 | 70 |  216 | 402 |
|  7 | 3 |  49 |  6 |  343 | 392 |
|  8 | 2 |  64 |  6 |  512 | 639 |
|  9 | 7 |  81 | 64 |  729 | 542 |
| 10 | 9 | 100 | 52 | 1000 | 667 |

#+BEGIN_SRC python :var nums=cool-numbers :results list
return [ cell + 1 for row in nums for cell in row ]
#+END_SRC

#+RESULTS:
- 2
- 5
- 2
- 25
- 2
- 191
- 3
- 7
- 5
- 33
- 9
- 194
- 4
- 7
- 10
- 32
- 28
- 653
- 5
- 1
- 17
- 17
- 65
- 333
- 6
- 4
- 26
- 53
- 126
- 288
- 7
- 4
- 37
- 43
- 217
- 633
- 8
- 9
- 50
- 93
- 344
- 75
- 9
- 9
- 65
- 71
- 513
- 849
- 10
- 2
- 82
- 6
- 730
- 940
- 11
- 10
- 101
- 77
- 1001
- 448
** Inline Execution

src_ruby{ 5+6 } {{{results(=11=)}}}

** GraphViz

#+BEGIN_SRC dot :file some-illustration.png
  digraph {
    a -> b;
    b -> c:
    c -> a;
  }
#+END_SRC

#+RESULTS:
[[file:some-illustration.png]]
* Latex
#+NAME: latex-wrap


#+BEGIN_SRC emacs-lisp :var text="" :exports none
(concat "\\[ " text " \\]")
#+END_SRC

#+BEGIN_SRC calc :results raw :post latex-wrap(text=*this*)
y = 3^x
#+END_SRC

* Text

#+BEGIN_QUOTE
Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
#+END_QUOTE

* Test

#+PLOT: title:"Citas" ind:1 deps:(3) type:2d with:histograms set:"yrange [0:]"
| Sede      | Max cites | H-index |
|-----------+-----------+---------|
| Chile     |    257.72 |   21.39 |
| Leeds     |    165.77 |   19.68 |
| Sao Paolo |     71.00 |   11.50 |
| Stockholm |    134.19 |   14.33 |
| Morelia   |    257.56 |   17.67 |

|js},
    {
      todo:
        Some([|
          "ACTIVE",
          "NEXT",
          "DONE",
          "WAITING",
          "SOMEDAY",
          "CANCELLED",
          "PROJECT",
          "NOTE",
        |]),
    },
  );
