 bsb | 39 +++++++++++++++++++++++++++++++++++----
 1 file changed, 35 insertions(+), 4 deletions(-)

diff --git a/bsb b/bsb
index bfab08702..c77c7636e 100755
--- a/bsb
+++ b/bsb
@@ -110,6 +110,7 @@ Please pick a different one using the \`-ws [host:]port\` flag from bsb.`)
  * @type {string[]}
  */
 var delegate_args = []
+var watch_mode_delegate_args = []
 var process_argv = process.argv
 for (var i = 2; i < process_argv.length; ++i) {
     var current = process_argv[i]
@@ -140,7 +141,9 @@ for (var i = 2; i < process_argv.length; ++i) {
             watch_mode = true
         } else if (current === "-verbose") {
             verbose = true
-
+            watch_mode_delegate_args.push(current)
+        } else {
+            watch_mode_delegate_args.push(current)
         }
     }
 }
@@ -266,8 +269,36 @@ if (watch_mode) {
     var sourcedirs = path.join('lib', 'bs', '.sourcedirs.json')
     var watch_generated = []
 
+    function getDirsForRelativeSymlinkedPackages (pkgs) {
+        pkgs = pkgs.slice()
+        var watched_dirs = []
+        var visited = {}
+        var pkg
+        var cwd = process.cwd()
+        //noinspection JSAssignmentUsedAsCondition
+        while (pkg = pkgs.shift()) {
+            var pkg_dir = pkg[1]
+            var stats = fs.lstatSync(pkg_dir)
+            if (!stats.isSymbolicLink()) continue
+            pkg_dir = fs.realpathSync(pkg[1])
+            if (visited[pkg_dir]) continue
+            visited[pkg_dir] = true
+            var pkg_sourcedirs = path.join(pkg_dir, sourcedirs)
+            var watch_files = getWatchFiles(pkg_sourcedirs)
+            var dirs = watch_files.dirs
+            for (var i = 0; i < dirs.length; i++) {
+                var dir = path.join(pkg_dir, dirs[i])
+                if (fs.existsSync(dir)) {
+                    watched_dirs.push(dir)
+                }
+            }
+            pkgs.push.apply(pkgs, watch_files.pkgs)
+        }
+        return watched_dirs
+    }
+
     function watch_build(watch_config) {
-        var watch_files = watch_config.dirs
+        var watch_files = watch_config.dirs.concat(getDirsForRelativeSymlinkedPackages(watch_config.pkgs))
         watch_generated = watch_config.generated
         // close and remove all unused watchers
         watchers = watchers.filter(function (watcher) {
@@ -399,7 +430,7 @@ if (watch_mode) {
             }
             reasons_to_rebuild = [];
             var p = child_process
-                .spawn(bsb_exe, [], { stdio: ['inherit', 'inherit', 'pipe'] });
+                .spawn(bsb_exe, watch_mode_delegate_args, { stdio: ['inherit', 'inherit', 'pipe'] });
             p.on('exit', build_finished_callback)
             p.stderr
                 .setEncoding('utf8')
@@ -433,7 +464,7 @@ if (watch_mode) {
         if (fs.existsSync(file)) {
             return JSON.parse(fs.readFileSync(file, 'utf8'))
         } else {
-            return { dirs: [], generated: [] }
+            return { dirs: [], pkgs: [], generated: [] }
         }
 
     }
